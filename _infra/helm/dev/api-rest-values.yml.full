replicaCount: 1

secret:
  enabled: false

configMap:
  enabled: true
  name: "bookstore-adot"
  mountPath: /app/core/config
  readOnly: true
  data:
    .app.config.json: |-
      {
          "AppName": "GO App",
          "GRPCTimeout": 10,
          "CacheExpiry": 300,
          "CacheCleanup": 600,
          "DefaultPageLimit": 3,
          "ClientTimeout": 10
      }
    .env: |-
      export GIN_MODE=release

image:
  repository: YOUR_AWS_ACCOUNT.dkr.ecr.us-west-2.amazonaws.com/devopscorner/bookstore-adot
  # repository: devopscorner/bookstore-adot
  pullPolicy: Always
  tag: "alpine"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: "bookstore-adot"

serviceAccount:
  create: true
  annotations: {}
  name: bookstore-adot
  namespace: devopscorner

service:
  type: NodePort
  ports:
    - name: http
      port: 8080
      targetPort: 8080
      protocol: TCP

container:
  ports:
    - name: http
      containerPort: 8080
      protocol: TCP

ingress:
  enabled: true
  annotations:
    nginx.ingress.kubernetes.io/cors-allow-headers: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "*"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
    kubernetes.io/ingress.class: nginx
    ingress.kubernetes.io/whitelist-source-range: 32.0.0.0/32
  hosts:
    #- host: bookstore-adot.awscb.id
    - host: bookstore-adot.devopscorner.svc.cluster.local
      http:
        paths:
          - path: /
            pathType: Prefix   # Prefix -or - ImplementationSpecific
            backend:
              service:
                name: bookstore-adot
                port:
                  number: 8080
  tls: []

application:
  enabled: true
  env:
    - name: HELM_TEMPLATE_NAME
      value: api
    # ======================== #
    #  GIN Mode                #
    # ======================== #
    - name: GIN_MODE
      value: release
    # ======================== #
    #  App URL & Port          #
    # ======================== #
    - name: APP_URL
      value: "http://0.0.0.0"
    - name: APP_PORT
      value: "8080"
    # ======================== #
    #  Connection Type         #
    #   - sqlite               #
    #   - mysql                #
    #   - postgres             #
    #   - dynamo               #
    # ======================== #
    - name: DB_CONNECTION
      value: dynamo
    - name: DB_HOST
      value: "http://0.0.0.0"
    - name: DB_PORT
      value: ""
    - name: DB_DATABASE
      value: dynamodb-golang-adot
    - name: DB_USERNAME
      valueFrom:
        secretKeyRef:
          name: golang-adot-secret
          key: db_username
    - name: DB_PASSWORD
      valueFrom:
        secretKeyRef:
          name: golang-adot-secret
          key: db_password
    # ======================== #
    #  JWT Credentials         #
    # ======================== #
    - name: JWT_AUTH_USERNAME
      valueFrom:
        secretKeyRef:
          name: golang-adot-secret
          key: jwt_auth_username
    - name: JWT_AUTH_PASSWORD
      valueFrom:
        secretKeyRef:
          name: golang-adot-secret
          key: jwt_auth_password
    - name: JWT_SECRET
      valueFrom:
        secretKeyRef:
          name: golang-adot-secret
          key: jwt_secret
    # ======================== #
    #  LOG Level               #
    # ======================== #
    - name: LOG_LEVEL
      value: INFO
    # ======================== #
    #  AWS Credentials         #
    # ======================== #
    - name: AWS_REGION
      value: us-west-2
    - name: AWS_ACCESS_KEY
      valueFrom:
        secretKeyRef:
          name: golang-adot-secret
          key: aws_access_key
    - name: AWS_SECRET_KEY_ID
      valueFrom:
        secretKeyRef:
          name: golang-adot-secret
          key: aws_secret_key
    # ======================== #
    #  OpenSearch Credentials  #
    # ======================== #
    - name: OPENSEARCH_ENDPOINT
      value: https://opensearch.us-west-2.es.amazonaws.com
    - name: OPENSEARCH_USERNAME
      valueFrom:
        secretKeyRef:
          name: golang-adot-secret
          key: opensearch_username
    - name: OPENSEARCH_PASSWORD
      valueFrom:
        secretKeyRef:
          name: golang-adot-secret
          key: opensearch_password
    # ======================== #
    #  Prometheus              #
    # ======================== #
    - name: PROMETHEUS_ENDPOINT
      value: http://0.0.0.0:8088
    - name: PROMETHEUS_PORT
      value: "8088"
    # ======================== #
    #  Grafana                 #
    # ======================== #
    - name: GRAFANA_ENDPOINT
      value: http://0.0.0.0:3000
    - name: GRAFANA_API_KEY
      valueFrom:
        secretKeyRef:
          name: golang-adot-secret
          key: grafana_api_key
    # ======================== #
    #  OpenTelemetry           #
    # ======================== #
    - name: OTEL_INSTRUMENTATION_METRIC_ENABLED
      value: "true"
    - name: OTEL_INSTRUMENTATION_TRACE_ENABLED
      value: "true"
    - name: OTEL_INSTRUMENTATION_LOG_ENABLED
      value: "true"
    # Trace Type: xray / jaeger
    - name: OTEL_INSTRUMENTATION_TRACE_NAME
      value: xray
    - name: OTEL_SERVICE_NAME
      value: bookstore-adot
    - name: OTEL_EXPORTER_OTLP_ENDPOINT
      value: http://0.0.0.0:4317
    - name: OTEL_EXPORTER_OTLP_PORT
      value: "4317"
    - name: OTEL_EXPORTER_OTLP_INSECURE
      value: "true"
    - name: OTEL_EXPORTER_OTLP_HEADERS
      value: ""
    - name: OTEL_RESOURCE_ATTRIBUTES
      value: ""
    - name: OTEL_TIME_INTERVAL
      value: "1"
    - name: OTEL_RANDOM_TIME_ALIVE_INCREMENTER
      value: "1"
    - name: OTEL_RANDOM_TOTAL_HEAP_SIZE_UPPER_BOUND
      value: "100"
    - name: OTEL_RANDOM_THREAD_ACTIVE_UPPOR_BOUND
      value: "10"
    - name: OTEL_RANDOM_CPU_USAGE_UPPER_BOUND
      value: "100"
    # ======================== #
    #  Jaeger                  #
    # ======================== #
    - name: JAEGER_AGENT_PORT
      value: "6831"
    # Sampler Type: const / probabilistic / rateLimiting / remote
    - name: JAEGER_SAMPLER_TYPE
      value: const
    - name: JAEGER_SAMPLER_PARAM
      value: "1"
    - name: JAEGER_SAMPLER_MANAGER_HOST_PORT
      value: "5000"
    - name: JAEGER_REPORTER_LOG_SPANS
      value: "true"
    # Interval in seconds (5*time.Second)
    - name: JAEGER_REPORTER_BUFFER_FLUSH_INTERVAL
      value: "5*time.Second"
    - name: JAEGER_REPORTER_MAX_QUEUE_SIZE
      value: "100"
    - name: JAEGER_REPORTER_LOCAL_AGENT_HOST_PORT
      value: "5001"
    - name: JAEGER_REPORTER_COLLECTOR_ENDPOINT
      value: http://0.0.0.0:14268/api/traces
    - name: JAEGER_REPORTER_COLLECTOR_USER
      valueFrom:
        secretKeyRef:
          name: golang-adot-secret
          key: jaeger_reporter_collector_user
    - name: JAEGER_REPORTER_COLLECTOR_PASSWORD
      valueFrom:
        secretKeyRef:
          name: golang-adot-secret
          key: jaeger_reporter_collector_password
    - name: JAEGER_TAGS
      value: "golang,otel,restful,api,bookstore"
    # ======================== #
    #  X-Ray                   #
    #   - latest               #
    #   - 3.x                  #
    #   - 2.x                  #
    #   - 1.x                  #
    # ======================== #
    - name: XRAY_VERSION
      value: "latest"
    - name: XRAY_DAEMON_ENDPOINT
      value: "https://xray.us-west-2.amazonaws.com"
    - name: XRAY_DAEMON_PORT
      value: "2000"

resources:
  limits:
    cpu: 300m
    memory: 500Mi
  requests:
    cpu: 150m
    memory: 150Mi

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 1
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector:
  enabled: true
  select:
    node: "goapp-prod"

tolerations: []

affinity: {}

podAnnotations: {}

podSecurityContext: {}

securityContext: {}
